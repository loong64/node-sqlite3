name: CI
on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *' # every Sunday at midnight

env:
  FORCE_COLOR: 1
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  check-binaries:
    runs-on: ubuntu-latest
    outputs:
      create: ${{ steps.check-release.outputs.create }}
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Version
        id: get-version
        run: |
          version=$(curl -s "https://api.github.com/repos/TryGhost/node-sqlite3/releases/latest" | jq -r .tag_name)
          if [ -z "${version}" ] || [ "${version}" == "null" ]; then
            echo "Failed to get version"
            exit 1
          fi
          
          echo "version=${version}" >> $GITHUB_ENV
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo ""
          echo "========== Build Args =========="
          echo "version=${version}"

      - name: Check Release
        id: check-release
        run: |
          gh release view ${version} -R ${{ github.repository }} >/dev/null 2>&1 || echo "create=1" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-qemu:
    runs-on: ubuntu-latest
    needs: check-binaries
    if: needs.check-binaries.outputs.create == '1'
    strategy:
      fail-fast: false
      matrix:
        node:
          - 18
        target:
          - linux/loong64
        variant:
          - trixie
          - alpine3.21
    name: ${{ matrix.variant }} (node=${{ matrix.node }}, target=${{ matrix.target }})
    steps:
      - uses: actions/checkout@v4
        with:
          repository: TryGhost/node-sqlite3
          ref: ${{ needs.check-binaries.outputs.version }}

      - name: Setup Build
        run: |
          rm -f /tmp/Dockerfile
          wget -q -O /tmp/Dockerfile https://github.com/${{ github.repository }}/raw/master/Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build binaries and test
        run: |
          docker buildx build \
            --file /tmp/Dockerfile \
            --load \
            --tag sqlite-builder \
            --platform ${{ matrix.target }} \
            --no-cache \
            --build-arg VERSION=${{ needs.check-binaries.outputs.version }} \
            --build-arg VARIANT=${{ matrix.variant }} \
            --build-arg NODE_VERSION=${{ matrix.node }} \
            .
          CONTAINER_ID=$(docker create -it sqlite-builder)
          docker cp $CONTAINER_ID:/usr/src/build/prebuilds/ ./prebuilds

      - name: Upload binaries to commit artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node == 18
        with:
          name: prebuilt-binaries-${{ matrix.variant }}
          path: prebuilds/*
          retention-days: 7

  release:
    runs-on: ubuntu-latest
    needs: [check-binaries, build-qemu]
    if: needs.check-binaries.outputs.create == '1'
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: prebuilt-binaries-*
          merge-multiple: true

      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ needs.check-binaries.outputs.version }}
          tag_name: ${{ needs.check-binaries.outputs.version }}
          files: dist/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
